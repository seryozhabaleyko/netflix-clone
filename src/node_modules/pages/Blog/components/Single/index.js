import React, { useEffect, Fragment } from 'react';
import { connect } from 'react-redux';
import { Link } from 'react-router-dom';

import Author from '../Author';
import { fetchBlogArticle } from 'actions/blog';
import Like from 'components/Like';
import Comments from '../Comments';

import './single.scss';

function Single({ fetchBlogArticle, match, isFetching, error, article }) {
    const { slug } = match.params;

    useEffect(() => {
        fetchBlogArticle(slug);
    }, [fetchBlogArticle, slug]);

    return (
        <main className="main">
            <div className="container">
                <article className="blog-single">
                    {isFetching && (<p>Loading post...</p>)}
                    {error && (<p>Unable to display post.</p>)}
                    {!isFetching && !error && (
                        <Fragment>
                            <h1 className="blog-single__title">{article.title}</h1>
                            <Author />
                            <Link className="button default small" to="/">CSS</Link>
                            <Link className="button default small" to="/">JavaScript</Link>
                            <Link className="button default small" to="/">React</Link>
                            <Like />
                            <div className="blog-single__description">
                                <p>{article.body}</p>
                                <p>{article.body}</p>
                                <p>{article.body}</p>
                                <h2>Maecenas pretium lorem fermentum</h2>
                                <p>{article.body}</p>
                                <p>{article.body}</p>
                                <p>{article.body}</p>
                            </div>
                        </Fragment>
                    )}
                </article>
                <Comments match={match} />
            </div>
        </main>
    );
}

const mapStateToProps = (state) => ({
    article: state.blogArticle.article,
    isFetching: state.blogArticle.isFetching,
    error: state.blogArticle.error,
});

const mapDispatchToProps = {
    fetchBlogArticle,
};

export default connect(mapStateToProps, mapDispatchToProps)(Single);