import React, { useEffect } from 'react';
import { connect } from 'react-redux';
import { Link } from 'react-router-dom';

import Author from '../Author';
import fetchBlogArticle from 'actions/blogArticle';
import fetchArticleComments from 'actions/blogArticleComments';
import Like from 'components/Like';

import './single.scss';

function Single({ fetchBlogArticle, fetchArticleComments, match, article }) {

    console.log(article);

    const slug = match.params.slug;

    useEffect(() => {
        fetchBlogArticle(slug);
        fetchArticleComments(2);
    }, [fetchBlogArticle, slug, fetchArticleComments]);

    return (
        <main className="main">
            <div className="container">
                {article.length && (
                    <article className="blog-single">
                        <h1 className="blog-single__title">{article.title}</h1>
                        <Author
                            author={article.author.username}
                            avatar={article.author.avatar}
                        />
                        <Link className="button default small" to="/">CSS</Link>
                        <Link className="button default small" to="/">JavaScript</Link>
                        <Link className="button default small" to="/">React</Link>
                        <Like />
                        <div className="blog-single__description">
                            <p>{article.body}</p>
                            <p>{article.body}</p>
                            <p>{article.body}</p>
                            <h2>Maecenas pretium lorem fermentum</h2>
                            <p>{article.body}</p>
                            <p>{article.body}</p>
                            <p>{article.body}</p>
                        </div>
                    </article>
                )}
            </div>
        </main>
    );
}

const mapStateToProps = (state) => {
    console.log(state);
    return {
        article: state.blogArticle.article,
        comments: state.blogArticleComments.comments,
    };
};

const mapDispatchToProps = {
    fetchBlogArticle,
    fetchArticleComments,
};

export default connect(mapStateToProps, mapDispatchToProps)(Single);