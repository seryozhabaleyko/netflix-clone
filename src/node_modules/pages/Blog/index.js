import React, { useEffect, Fragment } from 'react';
import { connect } from 'react-redux';

import { fetchBlogArticles } from 'actions/blog';
import Article from './components/Article';
import Sidebar from 'components/Sidebar';
import Subsicribe from './components/Subsicribe';
import Pagination from 'components/Pagination';
import Container from 'components/Container';
import Loader from 'components/Loader';

import './blog.scss';

function Blog({ fetchBlogArticles, isFetching, articles, error }) {

    useEffect(() => {
        fetchBlogArticles();
    }, [fetchBlogArticles]);

    return (
        <main className="main">
            <Container>
                <section className="blog">
                    <div className="grid">
                        <div className="content">
                            {isFetching && <Loader />}
                            {error && (<p>Unable to display posts.</p>)}
                            {!isFetching && !error && (
                                <Fragment>
                                    {articles.map((article) => (
                                        <Article key={article.id} {...article} />
                                    ))}
                                    <Pagination />
                                </Fragment>
                            )}
                        </div>
                        <Sidebar>
                            <Subsicribe />
                        </Sidebar>
                    </div>
                </section>
            </Container>
        </main>
    );
}

const mapStateToProps = (state) => ({
    isFetching: state.blog.isFetching,
    articles: Object.values(state.blog.articles),
    error: state.blog.error,
});

const mapDispatchToProps = {
    fetchBlogArticles,
};

export default connect(mapStateToProps, mapDispatchToProps)(Blog);