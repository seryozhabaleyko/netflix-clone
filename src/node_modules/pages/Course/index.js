import React, { useEffect } from 'react';
import { connect } from 'react-redux';

import { fetchCourse } from 'actions/courses';

import './course.scss';

function Course({ match, fetchCourse, isFetching, course, error }) {

    const { slug } = match.params;

    useEffect(() => { fetchCourse(slug); }, [fetchCourse, slug]);

    const { title = '', cover, thumbnailUrl } = course;

    return (
        <main className="main" style={{ paddingTop: 0 }}>
            {isFetching && (<p>Loading..</p>)}
            {error && (<p>Error</p>)}
            {!isFetching && !error && (
                <article className="course">
                    <section className="course-intro-banner">
                        <img src={cover} alt="cover" />
                        <div className="container">
                            <h1>{title}</h1>
                        </div>
                    </section>
                    <div style={{ height: '25px' }}></div>
                    <section className="course-main">
                        <div className="container" style={{ display: 'grid', gridTemplateColumns: '2fr 1fr', columnGap: '70px' }}>
                            <div className="course-content">1</div>
                            <div className="course-sidebar">
                                <div className="course-card">
                                    <div className="card-thumbnail">
                                        <img src={thumbnailUrl} alt={title} />
                                    </div>
                                    <div className="card-body"></div>
                                </div>
                            </div>
                        </div>
                    </section>
                </article>
            )}
        </main>
    );
}

const mapStateToProps = (state) => ({
    isFetching: state.courses.isFetching,
    course: state.courses.course,
    error: state.courses.error,
});

const mapDispatchToProps = {
    fetchCourse,
};

export default connect(mapStateToProps, mapDispatchToProps)(Course);