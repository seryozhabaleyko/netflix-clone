import React, { useEffect } from 'react';
import { connect } from 'react-redux';

import Container from 'components/Container';
import { fetchCourses, fetchCategories } from 'actions/courses';
import Course from './components/Course';
import Category from './components/Category';

import './courses.scss';

function Courses({ fetchCourses, fetchCategories, isFetching, courses, categories, error }) {

    useEffect(() => { fetchCourses() }, [fetchCourses]);
    useEffect(() => { fetchCategories() }, [fetchCategories]);

    return (
        <main className="main">
            <Container>
                <div className="courses">
                    {/* <h1>Курсы</h1> */}

                    <div className="courses-popular">
                        <div className="popular-heading">
                            <h2>Популярные курсы</h2>
                            <p>Нет никого, кто любил бы боль саму по себе, кто искал бы её и кто хотел бы иметь её просто потому, что это боль..</p>
                        </div>
                        <ul className="popular-list">
                            {error.courses && (<p>Error</p>)}
                            {isFetching.courses && (<p>Loading...</p>)}
                            {!isFetching.courses && !error.courses && courses.map((course) => (
                                <li key={course.id}>
                                    <Course {...course} />
                                </li>
                            ))}
                        </ul>
                    </div>

                    <div className="courses-categories">
                        <div className="categories-heading">
                            <h2>Категории</h2>
                            <p>Найти курс, просматривая топ категории</p>
                        </div>
                        <ul className="categories-list">
                            {error.categories && (<p>Error</p>)}
                            {isFetching.categories && (<p>Loading...</p>)}
                            {!isFetching.categories && !error.categories && categories.map((category) => (
                                <li key={category.id}>
                                    <Category {...category} />
                                </li>
                            ))}
                        </ul>
                    </div>

                    <div className="courses-new">
                        <div className="new-heading">
                            <h2>Новые курсы</h2>
                            <p>Нет никого, кто любил бы боль саму по себе, кто искал бы её и кто хотел бы иметь её просто потому, что это боль..</p>
                        </div>
                        <ul className="new-list">
                            {error.courses && (<p>Error</p>)}
                            {isFetching.courses && (<p>Loading...</p>)}
                            {!isFetching.courses && !error.courses && courses.map((course) => (
                                <li key={course.id}>
                                    <Course {...course} />
                                </li>
                            ))}
                        </ul>
                    </div>

                    <div className="courses-new">
                        <div className="new-heading">
                            <h2>Все курсы</h2>
                            <p>Нет никого, кто любил бы боль саму по себе, кто искал бы её и кто хотел бы иметь её просто потому, что это боль..</p>
                        </div>
                        <ul className="new-list">
                            {error.courses && (<p>Error</p>)}
                            {isFetching.courses && (<p>Loading...</p>)}
                            {!isFetching.courses && !error.courses && courses.map((course) => (
                                <li key={course.id}>
                                    <Course {...course} />
                                </li>
                            ))}
                        </ul>
                    </div>

                    <div className="course-list">
                        {error.courses && (<p>Error</p>)}
                        {isFetching.courses && (<p>Loading...</p>)}
                        {!isFetching.courses && !error.courses && courses.map((course) => (
                            <Course key={course.id} {...course} />
                        ))}
                    </div>
                </div>
            </Container>
        </main>
    );
}

const mapStatetoProps = (state) => ({
    isFetching: { courses: state.courses.isFetching, categories: state.coursesCategories.isFetching },
    courses: state.courses.courses,
    categories: state.coursesCategories.categories,
    error: { courses: state.courses.error, categories: state.coursesCategories.error },
});

const mapDispatchToProps = {
    fetchCourses,
    fetchCategories,
};

export default connect(mapStatetoProps, mapDispatchToProps)(Courses);