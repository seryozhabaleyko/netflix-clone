import * as R from 'ramda';
import faker from 'faker';

import menuAuth from './menu.auth.mock';
import menuNonAuth from './menu.nonAuth.mock';
import blog from './blog.mock';

export const fetchBlog = async () => new Promise((resolve) => resolve(blog));

export const fetchBlogSingle = async (slug) => new Promise((resolve) => {
    const single = R.find(R.propEq('slug', slug), blog);
    const success = single || {
        id: faker.random.uuid(),
        slug: faker.lorem.slug(),
        title: faker.lorem.sentence(),
        description: faker.lorem.paragraph(),
        body: faker.lorem.paragraphs(),
        image: 'https://via.placeholder.com/620x380',
        author: {
            username: `${faker.name.firstName()} ${faker.name.lastName()}`,
            avatar: faker.image.avatar(), // 'https://robohash.org/imanewuser.png'
        },
        categories: faker.hacker.ingverb(),
    };
    resolve(success);
});

export const fetchMenuAuth = async () => new Promise((resolve) => resolve(menuAuth));

export const fetchMenuNonAuth = async () => new Promise((resolve) => resolve(menuNonAuth));