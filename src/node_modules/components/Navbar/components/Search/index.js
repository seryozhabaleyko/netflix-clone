import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { connect } from 'react-redux';
import classNames from 'classnames';

import { fetchSearchValue } from 'actions/search';

import './search.scss';

const serachValue = [
    'React',
    'Angular',
    'Ember',
    'Backbone.js',
    'Vue',
    'Meteor',
    'Node.js',
    'Polymer',
];

function Search({ fetchSearchValue }) {

    useEffect(() => { fetchSearchValue('React') }, [fetchSearchValue]);

    const [search, setSearch] = useState('');
    const [searchResults, setSearchResults] = useState([]);

    const handleChange = (event) => {
        setSearch(event.target.value);
    };

    const handleSubmit = (event) => {
        console.log(search);

        event.preventDefault();
    };

    useEffect(() => {
        const results = serachValue.filter((item) => (
            item.toLowerCase().includes(search.trim())
        ));
        setSearchResults(results);
    }, [search]);

    const isInvalid = search === '';

    const classes = classNames('search', { active: !isInvalid });

    return (
        <form className={classes} onSubmit={handleSubmit}>
            <div>
                <input
                    className="search__input"
                    value={search}
                    onChange={handleChange}
                    type="text"
                    placeholder="Введите запрос"
                    autoComplete="off"
                />
                <button
                    className="search__submit"
                    type="submit"
                    disabled={isInvalid}
                >
                    <span className="material-icons">search</span>
                </button>
            </div>
            <div className="autocomplete">
                <ul className="search__list">
                    {searchResults.map((result) => (
                        <li key={result}>
                            <Link to="#">{result}</Link>
                        </li>
                    ))}
                </ul>
            </div>
        </form>
    );
}

const mapStateToProps = (state) => ({
    isFetching: state.search.isFetching,
    results: state.search.data,
    error: state.search.error,
});

const mapDispatchToProps = {
    fetchSearchValue,
};

export default connect(mapStateToProps, mapDispatchToProps)(Search);