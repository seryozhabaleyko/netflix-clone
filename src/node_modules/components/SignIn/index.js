import React, { Component } from 'react';
import { withRouter } from 'react-router-dom';
import { compose } from 'recompose';

import { SignUpLink } from 'components/SignUp';
import { PasswordForgetLink } from 'components/passwordForget';
import { withFirebase } from 'components/firebase';
import * as ROUTER from 'constants/routes';

const SignInPage = () => (
    <main className="main">
        <div className="container">
            <h1>Войти</h1>
            <p>Это бесплатно - и всегда так будет.</p>
            <SignInForm />
            <PasswordForgetLink />
            <SignUpLink />
        </div>
    </main>
);

const INITIAL_STATE = {
    email: '',
    password: '',
    error: null,
};

class SignInFormBase extends Component {

    constructor(props) {
        super(props);

        this.state = { ...INITIAL_STATE };

        this.onSubmit = this.onSubmit.bind(this);
        this.onChange = this.onChange.bind(this);
    }

    onSubmit(event) {
        const { email, password } = this.state;

        this.props.firebase
            .doSignInWithEmailAndPassword(email, password)
            .then(() => {
                this.setState({ ...INITIAL_STATE });
                this.props.history.push(ROUTER.HOME);
            })
            .catch((error) => {
                this.setState({ error });
            });

        event.preventDefault();
    }

    onChange(event) {
        this.setState({ [event.target.name]: event.target.value });
    }

    render() {
        const { email, password, error } = this.state;

        const isInvalid = password === '' || email === '';

        return (
            <form onSubmit={this.onSubmit}>
                <input
                    name='email'
                    value={email}
                    onChange={this.onChange}
                    type='text'
                    placeholder='Email Address'
                />
                <input
                    name='password'
                    value={password}
                    onChange={this.onChange}
                    type='password'
                    placeholder='Password'
                />
                <button disabled={isInvalid} type='submit'>
                    Sign In
                </button>

                {error && <p>{error.message}</p>}
            </form>
        );
    }
}

const SignInForm = compose(
    withRouter,
    withFirebase,
)(SignInFormBase);

export default SignInPage;

export { SignInForm };